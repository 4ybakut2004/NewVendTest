function extend(Child, Parent) {
    var F = function () { };
    F.prototype = Parent.prototype;

    var f = new F();
    
    for (var prop in Child.prototype) f[prop] = Child.prototype[prop];
    Child.prototype = f;
    Child.superclass = Parent.prototype;
}

function IndexPageController() {
  this.items = {};
  this.deleteActionSelector;
  this.tableSelector;
  this.editFormSelector;
  this.extractingSelector;
}

IndexPageController.prototype = {
  init: function(itemsArray) {
    for(var i = 0; i < itemsArray.length; i++) {
      this.items[itemsArray[i].id] = itemsArray[i];
    }
  },

  parmDeleteActionSelector: function(selector) {
    this.deleteActionSelector = selector;
  },

  parmTableSelector: function(selector) {
    this.tableSelector = selector;
  },

  parmEditFormSelector: function(selector) {
    this.editFormSelector = selector;
  },

  parmExtractingSelector: function(selector) {
    this.extractingSelector = selector;
  },

  setDeleteAction: function() {
    if(this.deleteActionSelector) {
      $(this.deleteActionSelector).on("ajax:success", function(e, data, status, xhr){
      }).bind("ajax:error", function(e, xhr, status, error){
        console.log(xhr.responseText);
      });
    }
  },

  setEditAction: function() {
    var self = this;
    $(this.tableSelector).find('td:not(.actions)').click(function() {
      $.ajax({
        type: "GET",
        url: $(this).parent().attr('data-link'),
        success: function(data) {
          var formElement = $(self.editFormSelector);
          var extractingElement = self.extractingSelector;
          var tableElement = $(self.tableSelector);

          formElement.empty();
          tableElement.css("display", "none");

          function closeForm(event) {
            formElement.animate({opacity: 0}, 300, function() {
                formElement.css("display", "none").empty();
                tableElement.css("display", "");
            });
          }

          formElement.append($(data).find(extractingElement));
          formElement.find('input[type="submit"]').bind("click", closeForm);

          var btn = $("<input type='button' value='X' class='btn btn-default' style='float: right;'>");
          btn.bind("click", closeForm);
          var col2 = $("<div class='col-md-2 text-right' style='padding-top: 5px;'></div>");
          var row = formElement.find("#edit-label");
          row.append($(col2));
          col2.append($(btn));

          formElement.css("display", "block");
          if(formElement.css("opacity") != 1)
          {
              formElement.css("opacity", "0");
              formElement.animate({opacity: 1}, 200, function() {});
          }
          return false;
        },
        error: function(data) {
          return false;
        }
      });
    });
  },

  insertRow: function(row, item) {
    var self = this;
    this.items[item.id] = item;

    row.prependTo(this.tableSelector + " tbody")
    .animate({opacity: 1}, 500, function() {
      self.setDeleteAction();
      self.setEditAction();
    });
  },

  updateRow: function(row, item) {
    var self = this;
    this.items[item.id] = item;
    
    row.insertAfter($(this.tableSelector).find("#" + item.id));
    $($(this.tableSelector).find("#" + item.id)).remove();
    $(this.editFormSelector).animate({opacity: 0}, 500, function() {
      $(this).css("display", "none").empty();
        self.setDeleteAction();
        self.setEditAction();
    });
  },

  deleteRow: function(item_id) {
    $($(this.tableSelector).find("#" + item_id)).animate({opacity: 0}, 500, function() {
      $(this).remove();
    });

    delete this.items[item_id];
  }
};

function AllRequestsTemplate() {
  this.items = {};
  this.deleteActionSelector;
  this.tableSelector;
  this.editFormSelector;
  this.extractingSelector;
}

AllRequestsTemplate.prototype = {
  setHoverAction: function() {
    this.hoverAction($(this.tableSelector + " tbody tr"));
  },

  hoverAction: function(element) {
    var self = this;

    function tableRowHover() {
      var infoContainer = $("#full-request-info");
      infoContainer.find("#request-messages-table tbody").empty();
      infoContainer.find("#message-tasks-table tbody").empty();
      infoContainer.find("#full-phone-number").empty();

      var request = self.items[$(this).attr("id")];

      var request_messages_table = infoContainer.find("#request-messages-table");
      var message_tasks_table = infoContainer.find("#message-tasks-table");

      for(var i = 0; i < request.request_messages.length; i++)
      {
        var request_message = request.request_messages[i];
        request_messages_table.find("tbody").append(
          $("<tr>"+
              "<td>" + request_message + "</td>" +
            "<tr>")
        );
      }

      for(var i = 0; i < request.message_tasks.length; i++)
      {
        var message_task = request.message_tasks[i];
        message_tasks_table.find("tbody").append(
          $("<tr>"+
              "<td>" + message_task.name + "</td>" +
            "<tr>")
        );
      }

      if(request.request_type == "phone" && request.phone)
      {
        infoContainer.find("#full-phone-number").append(
          $("<table class='table table-condensed'><thead>" +
            "<tr><th>Телефон</th></tr>" +
            "</thead>" +
            "<tbody>" +
            "<tr><td>" + request.phone + "</td></tr>" +
            "</tbody></table>")
        );
      }

      var topNumber = $(this).position().top - infoContainer.height() - 40;
      if(topNumber < 0) {
        topNumber = $(this).position().top + $(this).height();
      }
      var top = topNumber + "px";
      var left = $(this).position().left + "px";
      infoContainer.css("top", top)
      .css("left", left)
      .css("display", "block")
      .css("opacity", "0").animate({
        opacity: 1
      }, 200, function() {});
    }

    function tableRowUnHover() {
      var infoContainer = $("#full-request-info");
      infoContainer.css("display", "none").css("opacity", "0");
    }

    element.hover(tableRowHover, tableRowUnHover);
  },

  insertRow: function(row, request) {
    this.hoverAction(row);

    var self = this;
    this.items[request.id] = request;

    row.prependTo(this.tableSelector + " tbody")
    .animate({opacity: 1}, 500, function() {
      self.setDeleteAction();
      self.setEditAction();
    });
  },

  updateRow: function(row, request) {
    this.hoverAction(row);

    var self = this;
    this.items[request.id] = request;
    
    row.insertAfter($(this.tableSelector).find("#" + request.id));
    $($(this.tableSelector).find("#" + request.id)).remove();
    $(this.editFormSelector).animate({opacity: 0}, 500, function() {
      $(this).css("display", "none").empty();
        self.setDeleteAction();
        self.setEditAction();
    });
  }
};

extend(AllRequestsTemplate, IndexPageController);

function MessageTasksTemplate() {
  this.items = {};
  this.deleteActionSelector;
  this.tableSelector;
  this.editFormSelector;
  this.extractingSelector;
}

MessageTasksTemplate.prototype = {
  
};

extend(MessageTasksTemplate, IndexPageController);